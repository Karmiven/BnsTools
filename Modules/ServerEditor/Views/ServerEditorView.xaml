<UserControl x:Class="ServerEditor.Views.ServerEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"             
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:viewmodels="clr-namespace:ServerEditor.ViewModels" 
             xmlns:converters="clr-namespace:ServerEditor.Converters"
             xmlns:ap="clr-namespace:ServerEditor.AttachedProperties" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:control="clr-namespace:ServerEditor.Control"
             d:DataContext="{d:DesignInstance Type=viewmodels:ServerEditorViewModel}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             >
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" HorizontalAlignment="Left">
            <Border Margin="0,1,0,0" Height="33" Width="120" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4">
                <TextBlock Text="Server Editor" FontSize="14" TextAlignment="Center" VerticalAlignment="Center" />
            </Border>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="320" MinWidth="100" x:Name="c1" />
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="*" x:Name="c2"/>
            </Grid.ColumnDefinitions>
            <Grid.InputBindings>
                <KeyBinding 
                    Gesture="Ctrl+S"
                    Command="{Binding SaveCommand}" 
                    CommandParameter="{Binding}" />
            </Grid.InputBindings>
            <!--左-->
            <DataGrid
            x:Name="dgFiles"
            Width="{Binding Path=Width.Value, ElementName=c1}" 
            ItemsSource="{Binding Files}" 
            SelectedIndex="{Binding FilesSelectedIndex}"
            ap:FilesScrollToSelectingItem.SelectingItem="{Binding ElementName=dgFiles, Path=SelectedItem}"
            Style="{StaticResource DataGrid.Small}" 
            IsSynchronizedWithCurrentItem="True"
            Grid.Column="0" HorizontalAlignment="Left" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open with default text editor" Command="{Binding OpenFileCommand}" CommandParameter="{Binding Files/}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.InputBindings>
                    <MouseBinding
                    MouseAction="LeftDoubleClick"
                    Command="{Binding FileDoubleClickCommand}"
                    CommandParameter="{Binding Files/}"
                />
                </DataGrid.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <i:InvokeCommandAction Command="{Binding FileNavigationCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="File" Binding="{Binding Name}" FontFamily="JetBrainsMono" FontSize="14" Width="200" IsReadOnly="True">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Desc" Binding="{Binding Desc}" IsReadOnly="False"/>
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Column="1" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource BorderBrush}"/>
            <!--右-->
            <hc:TabControl Grid.Column="2" x:Name="tc"
                       ItemsSource="{Binding EditingFiles}" 
                       SelectedIndex="{Binding EditingFilesSelectedIndex}" 
                       IsAnimationEnabled="True" 
                       ShowCloseButton="True" 
                       ShowOverflowButton="True" 
                       ShowScrollButton="False" 
                       ShowContextMenu="True"
                       IsDraggable="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TableItemSelectionChangedCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <hc:TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Title}" ToolTip="{Binding Name}"/>
                            <TextBlock Text="*" Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>
                    </DataTemplate>
                </hc:TabControl.ItemTemplate>
                <hc:TabControl.ContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300" x:Name="ac1"/>
                                <ColumnDefinition Width="3"/>
                                <ColumnDefinition Width="*" x:Name="ac2"/>
                            </Grid.ColumnDefinitions>
                            <!--Record列表-->
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <control:CustomDataGrid Grid.Row="0" x:Name="dgList"
                                    ItemsSource="{Binding XmlNodes}"
                                    SelectedItems="{Binding SelectedNodesBind, Mode=OneWayToSource}"
                                    Style="{StaticResource DataGrid.Small}"
                                    Width="{Binding Path=Width.Value, ElementName=ac1}" 
                                    SelectedIndex="{Binding NodeSelectedIndex}"
                                    ap:XmlNodeViewModelScrollToSelectingItem.SelectingItem="{Binding ElementName=dgList, Path=SelectedItem}"
                                    IsSynchronizedWithCurrentItem="True"
                                    GridLinesVisibility="Vertical" VerticalGridLinesBrush="{DynamicResource BorderBrush}"
                                    HorizontalAlignment="Left" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                                    <DataGrid.InputBindings>
                                        <MouseBinding
                                            MouseAction="LeftDoubleClick"
                                            Command="{Binding NodeLeftDoubleClickCommand}"
                                            CommandParameter="{Binding XmlNodes/}" />
                                        <KeyBinding Gesture="Delete" Command="{Binding DeleteSelectedNodesCommand}" />
                                        <KeyBinding Gesture="Ctrl+C" Command="{Binding CopyNodeCommand}" />
                                        <KeyBinding Gesture="Ctrl+V" Command="{Binding PasteAddNodeCommand}" CommandParameter="{Binding XmlNodes/}" />
                                    </DataGrid.InputBindings>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="CopyAdd" Command="{Binding CopyAddNodeCommand}" CommandParameter="{Binding XmlNodes/}" />
                                            <MenuItem Header="Copy (Ctrl+C)" Command="{Binding CopyNodeCommand}"/>
                                            <MenuItem Header="PasteAdd (Ctrl+V)" Command="{Binding PasteAddNodeCommand}" CommandParameter="{Binding XmlNodes/}"/>
                                            <MenuItem Header="Delete (Delete)" Command="{Binding DeleteSelectedNodesCommand}" />
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Desc" Binding="{Binding Desc}" FontSize="12" IsReadOnly="True" Width="150" />
                                        <DataGridTextColumn Header="Title" Binding="{Binding Title}" FontFamily="JetBrainsMono" FontSize="14" IsReadOnly="True" />
                                    </DataGrid.Columns>
                                </control:CustomDataGrid>

                                <StackPanel x:Name="sp1" Grid.Row="1" Width="{Binding Path=Width.Value, ElementName=ac1}" Orientation="Horizontal">
                                    <TextBox x:Name="searchTb" Width="{Binding Width, ElementName=sp1, Converter={converters:SubtractConverter Value=61}}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Gesture="Enter" Command="{Binding SearchDownCommand}" CommandParameter="{Binding Path=Text, ElementName=searchTb}" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                    <Button Command="{Binding SearchUpCommand}" CommandParameter="{Binding Path=Text, ElementName=searchTb}" Width="30">↑</Button>
                                    <Button Command="{Binding SearchDownCommand}" CommandParameter="{Binding Path=Text, ElementName=searchTb}" Width="30">↓</Button>
                                </StackPanel>
                            </Grid>

                            <GridSplitter Grid.Column="1" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource BorderBrush}"/>
                            <!--编辑区-->
                            <control:CustomDataGrid x:Name="attrDg"
                                  Grid.Column="2" 
                                  ItemsSource="{Binding EditingXmlAttributes}"
                                  SelectedItems="{Binding SelectedAttrsBind, Mode=OneWayToSource}"
                                  Style="{StaticResource DataGrid.Small}" 
                                  GridLinesVisibility="Vertical" 
                                  VerticalGridLinesBrush="{DynamicResource BorderBrush}"                                   
                                  IsSynchronizedWithCurrentItem="True"
                                  AutoGenerateColumns="False"
                                  hc:DataGridAttach.CanUnselectAllWithBlankArea="True" HeadersVisibility="All" RowHeaderWidth="30" >
                                <DataGrid.InputBindings>
                                    <KeyBinding Gesture="Delete" Command="{Binding DeleteSelectedAttrCommand}" />
                                    <KeyBinding Gesture="Ctrl+C" Command="{Binding CopyAttrsCommand}" />
                                    <KeyBinding Gesture="Ctrl+V" Command="{Binding PasteAddAttrCommand}" CommandParameter="{Binding EditingXmlAttributes/}" />
                                </DataGrid.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CellEditEnding">
                                        <i:InvokeCommandAction Command="{Binding CellEditEndingCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="CopyAdd" Command="{Binding CopyAddAttrCommand}" CommandParameter="{Binding EditingXmlAttributes/}"/>
                                        <MenuItem Header="Copy (Ctrl+C)" Command="{Binding CopyAttrsCommand}"/>
                                        <MenuItem Header="PasteAdd (Ctrl+V)" Command="{Binding PasteAddAttrCommand}" CommandParameter="{Binding EditingXmlAttributes/}"/>
                                        <MenuItem Header="Delete (Delete)" Command="{Binding DeleteSelectedAttrCommand}"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                                <DataGrid.RowHeaderTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}"/>
                                    </DataTemplate>
                                </DataGrid.RowHeaderTemplate>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Attr" Binding="{Binding Attr}"  FontFamily="JetBrainsMono" FontSize="14"/>
                                    <DataGridTextColumn Header="AttrDesc" Binding="{Binding AttrDesc, Mode=OneWay}" FontSize="13"/>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" FontFamily="JetBrainsMono" FontSize="14"/>
                                    <DataGridTextColumn Header="ValueDesc" Binding="{Binding ValueDesc, Mode=TwoWay}" FontSize="13"/>
                                </DataGrid.Columns>
                            </control:CustomDataGrid>

                        </Grid>
                    </DataTemplate>
                </hc:TabControl.ContentTemplate>
            </hc:TabControl>
        </Grid>
    </Grid>

</UserControl>
